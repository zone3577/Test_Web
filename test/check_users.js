// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• users ‡πÉ‡∏ô Supabase
const { createClient } = require('@supabase/supabase-js')
const fs = require('fs')
const path = require('path')

// ‡∏≠‡πà‡∏≤‡∏ô .env.local
const envPath = path.join(__dirname, '.env.local')
const envContent = fs.readFileSync(envPath, 'utf8')
const envLines = envContent.split('\n')

let supabaseUrl = ''
let supabaseAnonKey = ''

envLines.forEach(line => {
  if (line.startsWith('NEXT_PUBLIC_SUPABASE_URL=')) {
    supabaseUrl = line.replace('NEXT_PUBLIC_SUPABASE_URL=', '').trim()
  }
  if (line.startsWith('NEXT_PUBLIC_SUPABASE_ANON_KEY=')) {
    supabaseAnonKey = line.replace('NEXT_PUBLIC_SUPABASE_ANON_KEY=', '').trim()
  }
})

const supabase = createClient(supabaseUrl, supabaseAnonKey)

async function checkUsers() {
  try {
    console.log('=== ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Users ===')
    
    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö auth.users (‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡πÑ‡∏î‡πâ)
    console.log('1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö auth.users...')
    console.log('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á auth.users ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡πÑ‡∏î‡πâ (security)')
    
    // 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö profiles table
    console.log('\n2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö profiles table...')
    const { data: profiles, error: profilesError } = await supabase
      .from('profiles')
      .select('*')
      
    if (profilesError) {
      console.error('‚ùå Error accessing profiles:', profilesError.message)
      if (profilesError.message.includes('relation "public.profiles" does not exist')) {
        console.log('üí° Table profiles ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á!')
      }
    } else {
      console.log('‚úÖ Table profiles ‡∏û‡∏ö‡πÅ‡∏•‡πâ‡∏ß')
      console.log('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô profiles:', profiles?.length || 0)
      console.log('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• profiles:', profiles)
    }

    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö user_stats view
    console.log('\n3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö user_stats view...')
    const { data: userStats, error: statsError } = await supabase
      .from('user_stats')
      .select('*')
      
    if (statsError) {
      console.error('‚ùå Error accessing user_stats:', statsError.message)
      if (statsError.message.includes('relation "public.user_stats" does not exist')) {
        console.log('üí° View user_stats ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á!')
      }
    } else {
      console.log('‚úÖ View user_stats ‡∏û‡∏ö‡πÅ‡∏•‡πâ‡∏ß')
      console.log('‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ users:', userStats)
    }

    // 4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö products table
    console.log('\n4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö products table...')
    const { data: products, error: productsError } = await supabase
      .from('products')
      .select('*')
      
    if (productsError) {
      console.error('‚ùå Error accessing products:', productsError.message)
      if (productsError.message.includes('relation "public.products" does not exist')) {
        console.log('üí° Table products ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á!')
      }
    } else {
      console.log('‚úÖ Table products ‡∏û‡∏ö‡πÅ‡∏•‡πâ‡∏ß')
      console.log('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:', products?.length || 0)
    }

    console.log('\n=== ‡∏™‡∏£‡∏∏‡∏õ ===')
    console.log('- Authentication Users: ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà 1 ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ö‡∏≠‡∏Å)')
    console.log('- Profiles Table:', profiles ? `${profiles.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£` : '‡πÑ‡∏°‡πà‡∏°‡∏µ/‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ')
    console.log('- Products Table:', products ? `${products.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£` : '‡πÑ‡∏°‡πà‡∏°‡∏µ/‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ')

  } catch (error) {
    console.error('‚ùå Unexpected error:', error)
  }
}

checkUsers()
